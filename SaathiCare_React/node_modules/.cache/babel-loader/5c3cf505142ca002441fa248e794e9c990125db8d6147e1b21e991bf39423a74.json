{"ast":null,"code":"var _jsxFileName = \"/Users/ritusaini/Documents/GitHub/SaathiCare/SaathiCare_React/src/components/MainContent/MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { FaRobot, FaUser, FaPlay, FaMicrophone, FaPaperPlane, FaHourglassHalf } from 'react-icons/fa';\nimport hark from 'hark';\nimport './MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainContent = () => {\n  _s();\n  const [chatStarted, setChatStarted] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [currentTagIndex, setCurrentTagIndex] = useState(-1);\n  const [userInput, setUserInput] = useState('');\n  const [shuffledTags, setShuffledTags] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [language, setLanguage] = useState('en-US');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [translatedInput, setTranslatedInput] = useState('');\n  const [lastInputMethod, setLastInputMethod] = useState('typing');\n  const inputRef = useRef(null);\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userAge, setUserAge] = useState('');\n  const [userGender, setUserGender] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [collectingUserInfo, setCollectingUserInfo] = useState(false);\n  const [userInfoStep, setUserInfoStep] = useState('');\n  const chatAreaRef = useRef(null);\n  const [showFeedbackOptions, setShowFeedbackOptions] = useState(false);\n  const [finalBotMessageShown, setFinalBotMessageShown] = useState(false);\n  const [reportUploadAsked, setReportUploadAsked] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [waitingForReportUploadResponse, setWaitingForReportUploadResponse] = useState(false);\n  const [shouldCallApiForReport, setShouldCallApiForReport] = useState(false);\n  const initialTags = ['symptom', 'lifestyle', 'genetic'];\n  const simplifyLanguageCode = languageCode => {\n    const languageMap = {\n      'en-US': 'en',\n      'es-ES': 'es',\n      'or-IN': 'or',\n      'hi-IN': 'hi'\n    };\n    return languageMap[languageCode] || languageCode.split('-')[0];\n  };\n  useEffect(() => {\n    if (chatStarted && !collectingUserInfo && currentTagIndex >= 0 && shuffledTags.length > currentTagIndex) {\n      handleApiCall(shuffledTags[currentTagIndex]);\n    }\n    // eslint-disable-next-line\n  }, [chatStarted, collectingUserInfo, shuffledTags, currentTagIndex]);\n  const translateText = async (text, languageCode) => {\n    if (!text || !languageCode) {\n      console.error(\"Missing text or language for translation:\", {\n        text,\n        languageCode\n      });\n      return text;\n    }\n    const simpleLanguageCode = simplifyLanguageCode(languageCode);\n    try {\n      const response = await fetch('https://34.93.4.171:9070/translate_to_language', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: text,\n          target_language: simpleLanguageCode\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        console.error('Translation API error:', data.error);\n        return text;\n      }\n      return data.translatedText;\n    } catch (error) {\n      console.error('Translation error:', error);\n      return text;\n    }\n  };\n\n  // eslint-disable-next-line\n  const handleBotMessage = async message => {\n    setIsLoading(true);\n    const translatedMessage = await translateText(message, language);\n    const textMessage = typeof translatedMessage === 'string' ? translatedMessage : 'Invalid message format';\n    setChatMessages(prevMessages => [...prevMessages, {\n      type: 'bot',\n      text: textMessage\n    }]);\n    setIsLoading(false);\n  };\n  const stopisListening = useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsListening(false);\n    }\n  }, []);\n  const startisListening = useCallback(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const speechEvents = hark(stream, {});\n      speechEvents.on('speaking', () => {\n        console.log('speaking');\n      });\n      let silenceTimer = null;\n      speechEvents.on('stopped_speaking', () => {\n        if (silenceTimer) clearTimeout(silenceTimer);\n        silenceTimer = setTimeout(() => {\n          console.log('Silence for 3 seconds, stopping recording');\n          stopisListening();\n          speechEvents.stop();\n        }, 3000);\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.addEventListener(\"dataavailable\", event => {\n        audioChunksRef.current.push(event.data);\n      });\n      mediaRecorderRef.current.addEventListener(\"stop\", async () => {\n        if (audioChunksRef.current && audioChunksRef.current.length > 0) {\n          const audioBlob = new Blob(audioChunksRef.current, {\n            type: 'audio/webm'\n          });\n          const formData = new FormData();\n          formData.append(\"audio\", audioBlob);\n          formData.append(\"language\", language);\n          try {\n            const response = await fetch('https://34.93.4.171:9070/speech_to_text', {\n              method: 'POST',\n              body: formData\n            });\n            const data = await response.json();\n            if (data.transcribedText && data.translatedText) {\n              setUserInput(data.transcribedText);\n              setTranslatedInput(data.translatedText.replace(/[.|]\\s*/g, ''));\n              setLastInputMethod('speech');\n            } else {\n              console.error('No transcription available:', data);\n            }\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        } else {\n          console.log('No audio data available to send.');\n        }\n      });\n      mediaRecorderRef.current.start();\n      setIsListening(true);\n    }).catch(error => console.log('Error accessing the microphone:', error));\n  }, [language, stopisListening]);\n  const toggleListening = useCallback(() => {\n    if (!isListening) {\n      startisListening();\n    } else {\n      stopisListening();\n    }\n    inputRef.current.focus();\n  }, [isListening, startisListening, stopisListening]);\n  const startChat = () => {\n    setCollectingUserInfo(true);\n    setUserInfoStep('name');\n    handleBotMessage(\"Type your name\");\n    setChatStarted(true);\n  };\n  const stateMappings = useMemo(() => ({\n    symptom: 'symptom_questions',\n    lifestyle: 'lifestyle_questions',\n    genetic: 'genetic_questions',\n    report: 'report_questions'\n  }), []);\n  const userStateMappings = {\n    symptom: 'user_symptoms',\n    lifestyle: 'user_lifestyle',\n    genetic: 'user_genetic',\n    report: 'user_report'\n  };\n  const [apiStates, setApiStates] = useState({\n    greeting_response: \"\",\n    symptom_questions: [],\n    lifestyle_questions: [],\n    genetic_questions: [],\n    report_questions: [],\n    user_symptoms: [],\n    user_lifestyle: [],\n    user_genetic: [],\n    user_report: []\n  });\n  const fetchContext = async userResponses => {\n    try {\n      setIsLoading(false);\n      setInputDisabled(true);\n      setIsListening(false);\n      const response = await fetch('https://34.93.4.171:9070/process_responses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_responses: userResponses\n        })\n      });\n      const data = await response.json();\n      return data.response;\n    } catch (error) {\n      return \"ERROR\";\n    }\n  };\n  const fetchClinicSuggestions = async userAddress => {\n    try {\n      const response = await fetch('https://34.93.4.171:9070/nearest_clinic', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: userAddress\n        })\n      });\n      const data = await response.json();\n      return data.nearest_clinic.join(\",\\n\");\n    } catch (error) {\n      return \"Error fetching clinic suggestions\";\n    }\n  };\n  const handleApiCall = useCallback(async tag => {\n    if (waitingForReportUploadResponse) return;\n    setIsLoading(true);\n    let context = '';\n    if (tag === 'report') {\n      const userResponses = {\n        lifestyle: apiStates.user_lifestyle.join(\", \"),\n        symptom: apiStates.user_symptoms.join(\", \"),\n        genetic: apiStates.user_genetic.join(\", \")\n      };\n      setInputDisabled(false);\n      context = await fetchContext(userResponses);\n      let prompt = await generatePromptForTag(userName, tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings, context);\n      try {\n        const response = await fetch('https://34.93.4.171:9070/predict', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            question: prompt,\n            tag: tag,\n            context: context\n          })\n        });\n        const data = await response.json();\n        await handleBotMessage(data.response);\n        setTimeout(async () => {\n          const clinicSuggestions = await fetchClinicSuggestions(userAddress);\n          await handleBotMessage(`You can visit any of the following clinics:\\n ${clinicSuggestions}`);\n          setShowFeedbackOptions(true);\n        }, 2000);\n      } catch (error) {\n        await handleBotMessage('There was an error processing your request.');\n      }\n    } else {\n      let prompt = await generatePromptForTag(userName, tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings, context);\n      try {\n        const response = await fetch('https://34.93.4.171:9070/predict', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            question: prompt,\n            tag: tag,\n            context: context\n          })\n        });\n        const data = await response.json();\n        await handleBotMessage(data.response);\n        setApiStates(prevStates => ({\n          ...prevStates,\n          [stateMappings[tag]]: [...prevStates[stateMappings[tag]], data.response]\n        }));\n      } catch (error) {\n        await handleBotMessage('There was an error processing your request.');\n      }\n    }\n    setIsLoading(false);\n    // eslint-disable-next-line\n  }, [userName, userAddress, currentTagIndex, shuffledTags, apiStates, waitingForReportUploadResponse, fetchContext, fetchClinicSuggestions, handleBotMessage]);\n  useEffect(() => {\n    setInputDisabled(isLoading || waitingForReportUploadResponse || showUploadModal || reportUploadAsked);\n  }, [isLoading, waitingForReportUploadResponse, showUploadModal, reportUploadAsked]);\n  const handleInputChange = useCallback(event => {\n    setUserInput(event.target.value);\n    setTranslatedInput('');\n    setLastInputMethod('typing');\n  }, []);\n  const askForReportUpload = useCallback(() => {\n    handleBotMessage(\"Would you like to upload a report? Please click Yes or No.\");\n    setReportUploadAsked(true);\n    setWaitingForReportUploadResponse(true);\n    setInputDisabled(true);\n  }, [handleBotMessage]);\n  useEffect(() => {\n    if (!waitingForReportUploadResponse && shouldCallApiForReport) {\n      handleApiCall('report');\n      setShouldCallApiForReport(false);\n    }\n  }, [waitingForReportUploadResponse, shouldCallApiForReport, handleApiCall]);\n  const handleReportUploadResponse = useCallback(response => {\n    setReportUploadAsked(false);\n    setInputDisabled(false);\n    setWaitingForReportUploadResponse(false);\n    if (response === 'Yes') {\n      setShowUploadModal(true);\n    } else {\n      setChatMessages(prevMessages => [...prevMessages, {\n        type: 'user',\n        text: response\n      }]);\n      setShouldCallApiForReport(true);\n    }\n  }, []);\n  const handleFileUpload = useCallback(async file => {\n    setShowUploadModal(false);\n    setInputDisabled(false);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setChatMessages(prevMessages => [...prevMessages, {\n        type: 'user',\n        text: `Uploaded Report: ${file.name}`\n      }]);\n      const uploadResponse = await fetch('https://34.93.4.171:9070/pdf_summarizer', {\n        method: 'POST',\n        body: formData\n      });\n      const uploadData = await uploadResponse.json();\n      if (uploadData && typeof uploadData.response === 'string') {\n        await handleBotMessage(uploadData.response);\n        handleApiCall('report');\n      } else {\n        await handleBotMessage(\"Received data from report analysis is not in expected format or is missing.\");\n        handleApiCall('report');\n      }\n    } catch (error) {\n      console.error('Failed to upload report:', error);\n      await handleBotMessage(\"There was an error in report analysis.\");\n      handleApiCall('report');\n    }\n    // eslint-disable-next-line\n  }, [handleApiCall, fetchClinicSuggestions, userAddress]);\n  const UploadModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf,application/json\",\n      onChange: e => handleFileUpload(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowUploadModal(false);\n        setWaitingForReportUploadResponse(true);\n        setReportUploadAsked(true);\n        setInputDisabled(true);\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 3\n  }, this);\n  const handleSendMessage = useCallback(async () => {\n    if (waitingForReportUploadResponse || isLoading || !userInput.trim()) return;\n    setInputDisabled(true);\n    const inputForBackend = lastInputMethod === 'speech' ? translatedInput : userInput;\n    const newUserMessage = {\n      type: 'user',\n      text: userInput\n    };\n    setChatMessages(chatMessages => [...chatMessages, newUserMessage]);\n    setUserInput('');\n    if (collectingUserInfo) {\n      if (userInfoStep === 'name') {\n        setUserName(inputForBackend);\n        setUserInfoStep('age');\n        await handleBotMessage(\"Type your age\");\n        setUserInput('');\n      } else if (userInfoStep === 'age') {\n        setUserAge(inputForBackend);\n        setUserInfoStep('gender');\n        await handleBotMessage(\"Type your gender\");\n        setUserInput('');\n      } else if (userInfoStep === 'gender') {\n        setUserGender(inputForBackend);\n        setUserInfoStep('address');\n        await handleBotMessage(\"Type your address\");\n        setUserInput('');\n      } else if (userInfoStep === 'address') {\n        setUserAddress(inputForBackend);\n        setCollectingUserInfo(false);\n        const shuffled = shuffleArray([...initialTags]);\n        shuffled.push('report');\n        setShuffledTags(shuffled);\n        await handleBotMessage(`Hi ${userName}, I am your doctor. How can I help you today?`);\n        setChatStarted(true);\n        setUserInput('');\n      }\n    } else {\n      if (currentTagIndex === -1) {\n        setApiStates(prevStates => ({\n          ...prevStates,\n          greeting_response: inputForBackend\n        }));\n        setCurrentTagIndex(0);\n      } else {\n        const currentTag = shuffledTags[currentTagIndex];\n        const userStateKey = userStateMappings[currentTag];\n        setApiStates(prevStates => ({\n          ...prevStates,\n          [userStateKey]: [...prevStates[userStateKey], inputForBackend]\n        }));\n        const nextIndex = currentTagIndex + 1;\n        if (nextIndex < shuffledTags.length) {\n          setCurrentTagIndex(nextIndex);\n          if (shuffledTags[nextIndex] === 'report') {\n            askForReportUpload();\n            return;\n          }\n        }\n      }\n    }\n    setUserInput('');\n    setTranslatedInput('');\n    setInputDisabled(false);\n    inputRef.current.focus();\n    // eslint-disable-next-line\n  }, [translatedInput, userInput, isLoading, chatMessages, collectingUserInfo, userInfoStep, userName, currentTagIndex, shuffledTags]);\n  useEffect(() => {\n    if (inputRef.current && !inputDisabled) {\n      inputRef.current.focus();\n    }\n  }, [chatMessages, inputDisabled]);\n  const handleLanguageChange = useCallback(event => {\n    setLanguage(event.target.value);\n    if (isListening) {\n      stopisListening();\n    }\n    setUserInput('');\n  }, [isListening, stopisListening]);\n  const handleFeedbackResponse = async response => {\n    await handleBotMessage(response);\n    setShowFeedbackOptions(false);\n    await handleBotMessage(\"Thank you for your feedback!\");\n    setFinalBotMessageShown(true);\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  useEffect(() => {\n    if (isLoading) {\n      setInputDisabled(true);\n    } else {\n      setInputDisabled(false);\n    }\n  }, [isLoading]);\n  const resetChat = useCallback(() => {\n    setChatStarted(false);\n    setChatMessages([]);\n    setCurrentTagIndex(-1);\n    setUserInput('');\n    setTranslatedInput('');\n    setLastInputMethod('typing');\n    setShuffledTags([]);\n    setIsListening(false);\n    setIsLoading(false);\n    setInputDisabled(false);\n    setCollectingUserInfo(false);\n    setUserInfoStep('');\n    setUserName('');\n    setUserAge('');\n    setUserGender('');\n    setUserAddress('');\n    setApiStates({\n      greeting_response: \"\",\n      symptom_questions: [],\n      lifestyle_questions: [],\n      genetic_questions: [],\n      report_questions: [],\n      user_symptoms: [],\n      user_lifestyle: [],\n      user_genetic: [],\n      user_report: []\n    });\n  }, []);\n  useEffect(() => {\n    if (chatAreaRef.current) {\n      chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight;\n    }\n  }, [chatMessages, reportUploadAsked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"language-select\",\n      value: language,\n      onChange: handleLanguageChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en-US\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es-ES\",\n        children: \"Spanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"or-IN\",\n        children: \"Odia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hi-IN\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 11\n    }, this), !chatStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-chat-button\",\n      onClick: startChat,\n      children: [/*#__PURE__*/_jsxDEV(FaPlay, {\n        className: \"start-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 13\n      }, this), \" Start Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }, this), (chatStarted || collectingUserInfo) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-area ${reportUploadAsked ? 'disabled' : ''}`,\n        ref: chatAreaRef,\n        children: [chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.type}-message`,\n          children: [msg.type === 'user' ? /*#__PURE__*/_jsxDEV(FaUser, {\n            className: \"message-icon user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(FaRobot, {\n            className: \"message-icon bot-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-text\",\n            children: msg.text && msg.text.split('\\n').map((line, lineIndex, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [line !== '.' ? line : null, lineIndex !== array.length - 1 && line !== '.' && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 76\n              }, this)]\n            }, lineIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 17\n        }, this)), reportUploadAsked && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReportUploadResponse('Yes'),\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReportUploadResponse('No'),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 17\n        }, this), showUploadModal && /*#__PURE__*/_jsxDEV(UploadModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 33\n        }, this), showFeedbackOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(FaRobot, {\n            className: \"message-icon bot-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Was this chat helpful?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 17\n        }, this), showFeedbackOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedbackResponse('Yes'),\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedbackResponse('No'),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `input-area ${inputDisabled || reportUploadAsked || showUploadModal || showFeedbackOptions ? 'disabled' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {\n          className: `mic-icon ${isListening ? 'listening' : ''} ${inputDisabled ? 'disabled' : ''}`,\n          onClick: toggleListening\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          placeholder: \"Type your response...\",\n          className: `prompt-input ${inputDisabled ? 'disabled' : ''}`,\n          value: userInput,\n          onChange: handleInputChange,\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n          disabled: inputDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `send-button ${isLoading || inputDisabled ? 'disabled' : ''}`,\n          onClick: handleSendMessage,\n          disabled: isLoading || inputDisabled,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(FaHourglassHalf, {\n            className: \"hourglass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), chatStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-chat-button\",\n      onClick: resetChat,\n      children: \"Reset Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 9\n  }, this);\n};\n_s(MainContent, \"leaBWfk6k8n1fUMyqSq/4KDxUHs=\");\n_c = MainContent;\nexport default MainContent;\nfunction generatePromptForTag(userName, tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings, fetchedContext) {\n  let prompt = \"\";\n  const greetingQuestion = `Hi ${userName}, I am your doctor. How can I help you today?`;\n  const greetingResponse = apiStates.greeting_response;\n  if (currentTagIndex === 0) {\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              I am playing a doctor in a play. Please generate one question I should ask a patient about their ${tag}.\n              Format your response strictly as follows: \n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === 1) {\n    const previousTag = shuffledTags[currentTagIndex - 1];\n    const lastQuestion = apiStates[stateMappings[previousTag]].slice(-1)[0];\n    const lastResponse = apiStates[userStateMappings[previousTag]].slice(-1)[0];\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              Previous Question: ${lastQuestion}\n              Previous Response from Patient: ${lastResponse}\n              I am playing a doctor in a play. Please generate one question based on the previous responses I should ask a patient about their ${tag}.\n              Format your response strictly as follows:\n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === 2) {\n    const previousTags = shuffledTags.slice(0, 2);\n    const previousQuestions = previousTags.map(tag => apiStates[stateMappings[tag]].slice(-1)[0]);\n    const previousResponses = previousTags.map(tag => apiStates[userStateMappings[tag]].slice(-1)[0]);\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              First Question: ${previousQuestions[0]}\n              First Response from Patient: ${previousResponses[0]}\n              Second Question: ${previousQuestions[1]}\n              Second Response from Patient: ${previousResponses[1]}\n              I am playing a doctor in a play. Please generate one question that I should ask a patient based on the previous responses, about their ${tag}.\n              Format your response strictly as follows:\n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === shuffledTags.length - 1) {\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              Patient symptoms: ${apiStates.user_symptoms.join(\", \")}.\n              Lifestyle and eating habits: ${apiStates.user_lifestyle.join(\", \")}.\n              Family history of diseases: ${apiStates.user_genetic.join(\", \")}.\n\n              Data Source for analysis:\n              ${fetchedContext}\n\n              Based on the patient's symptoms and provided context, provide a possible diagnosis, recommended treatments, and specialists to consult. \n              NOTE: 1. This will not be considered as a real treatment, don't give any note or precaution with your response.\n                    2. Make your diagnosis strictly based of of Data Source for analysis provided. \n              Format your response strictly as follows:\n              Diagnosis: [Specific diagnosis based on the symptoms].\n              Treatments:\n              - [Treatment 1]\n              - [Treatment 2]\n              - [Treatment 3]\n              ...\n              Specialists:\n              - [Specialist 1]\n              - [Specialist 2]\n              - [Specialist 3]\n              ...\n              END OF RESPONSE`;\n  }\n  return prompt;\n}\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","FaRobot","FaUser","FaPlay","FaMicrophone","FaPaperPlane","FaHourglassHalf","hark","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContent","_s","chatStarted","setChatStarted","chatMessages","setChatMessages","currentTagIndex","setCurrentTagIndex","userInput","setUserInput","shuffledTags","setShuffledTags","isListening","setIsListening","isLoading","setIsLoading","language","setLanguage","mediaRecorderRef","audioChunksRef","translatedInput","setTranslatedInput","lastInputMethod","setLastInputMethod","inputRef","inputDisabled","setInputDisabled","userName","setUserName","userAge","setUserAge","userGender","setUserGender","userAddress","setUserAddress","collectingUserInfo","setCollectingUserInfo","userInfoStep","setUserInfoStep","chatAreaRef","showFeedbackOptions","setShowFeedbackOptions","finalBotMessageShown","setFinalBotMessageShown","reportUploadAsked","setReportUploadAsked","showUploadModal","setShowUploadModal","waitingForReportUploadResponse","setWaitingForReportUploadResponse","shouldCallApiForReport","setShouldCallApiForReport","initialTags","simplifyLanguageCode","languageCode","languageMap","split","length","handleApiCall","translateText","text","console","error","simpleLanguageCode","response","fetch","method","headers","body","JSON","stringify","target_language","data","json","translatedText","handleBotMessage","message","translatedMessage","textMessage","prevMessages","type","stopisListening","current","stop","startisListening","navigator","mediaDevices","getUserMedia","audio","then","stream","speechEvents","on","log","silenceTimer","clearTimeout","setTimeout","MediaRecorder","addEventListener","event","push","audioBlob","Blob","formData","FormData","append","transcribedText","replace","start","catch","toggleListening","focus","startChat","stateMappings","symptom","lifestyle","genetic","report","userStateMappings","apiStates","setApiStates","greeting_response","symptom_questions","lifestyle_questions","genetic_questions","report_questions","user_symptoms","user_lifestyle","user_genetic","user_report","fetchContext","userResponses","user_responses","fetchClinicSuggestions","address","nearest_clinic","join","tag","context","prompt","generatePromptForTag","question","clinicSuggestions","prevStates","handleInputChange","target","value","askForReportUpload","handleReportUploadResponse","handleFileUpload","file","name","uploadResponse","uploadData","UploadModal","className","children","accept","onChange","e","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleSendMessage","trim","inputForBackend","newUserMessage","shuffled","shuffleArray","currentTag","userStateKey","nextIndex","handleLanguageChange","handleFeedbackResponse","array","i","j","Math","floor","random","resetChat","scrollTop","scrollHeight","ref","map","msg","index","line","lineIndex","placeholder","onKeyPress","key","disabled","_c","fetchedContext","greetingQuestion","greetingResponse","charAt","toUpperCase","slice","previousTag","lastQuestion","lastResponse","previousTags","previousQuestions","previousResponses","$RefreshReg$"],"sources":["/Users/ritusaini/Documents/GitHub/SaathiCare/SaathiCare_React/src/components/MainContent/MainContent.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { FaRobot, FaUser, FaPlay, FaMicrophone, FaPaperPlane, FaHourglassHalf } from 'react-icons/fa';\nimport hark from 'hark';\nimport './MainContent.css';\n\nconst MainContent = () => {\n  const [chatStarted, setChatStarted] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [currentTagIndex, setCurrentTagIndex] = useState(-1);\n  const [userInput, setUserInput] = useState('');\n  const [shuffledTags, setShuffledTags] = useState([]);\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [language, setLanguage] = useState('en-US');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [translatedInput, setTranslatedInput] = useState('');\n  const [lastInputMethod, setLastInputMethod] = useState('typing');\n  const inputRef = useRef(null);\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userAge, setUserAge] = useState('');\n  const [userGender, setUserGender] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [collectingUserInfo, setCollectingUserInfo] = useState(false);\n  const [userInfoStep, setUserInfoStep] = useState('');\n  const chatAreaRef = useRef(null);\n  const [showFeedbackOptions, setShowFeedbackOptions] = useState(false);\n  const [finalBotMessageShown, setFinalBotMessageShown] = useState(false);\n  const [reportUploadAsked, setReportUploadAsked] = useState(false);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [waitingForReportUploadResponse, setWaitingForReportUploadResponse] = useState(false);\n  const [shouldCallApiForReport, setShouldCallApiForReport] = useState(false);\n\n  const initialTags = ['symptom', 'lifestyle', 'genetic'];\n\n  const simplifyLanguageCode = (languageCode) => {\n    const languageMap = {\n      'en-US': 'en',\n      'es-ES': 'es',\n      'or-IN': 'or',\n      'hi-IN': 'hi'\n    };\n    return languageMap[languageCode] || languageCode.split('-')[0];\n  };  \n\n  useEffect(() => {\n    if (chatStarted && !collectingUserInfo && currentTagIndex >= 0 && shuffledTags.length > currentTagIndex) {\n        handleApiCall(shuffledTags[currentTagIndex]);\n    }\n    // eslint-disable-next-line\n  }, [chatStarted, collectingUserInfo, shuffledTags, currentTagIndex]);\n\n  const translateText = async (text, languageCode) => {\n    if (!text || !languageCode) {\n      console.error(\"Missing text or language for translation:\", { text, languageCode });\n      return text;\n    }\n    const simpleLanguageCode = simplifyLanguageCode(languageCode);\n    try {\n      const response = await fetch('https://34.93.4.171:9070/translate_to_language', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: text, target_language: simpleLanguageCode })\n      });\n      const data = await response.json();\n      if (data.error) {\n        console.error('Translation API error:', data.error);\n        return text;\n      }\n      return data.translatedText;\n    } catch (error) {\n      console.error('Translation error:', error);\n      return text; \n    }\n  };  \n\n      // eslint-disable-next-line\n  const handleBotMessage = async (message) => {\n    setIsLoading(true);\n    const translatedMessage = await translateText(message, language);\n    const textMessage = typeof translatedMessage === 'string' ? translatedMessage : 'Invalid message format';\n    setChatMessages((prevMessages) => [...prevMessages, { type: 'bot', text: textMessage }]);\n    setIsLoading(false);\n};\n\n\n  const stopisListening = useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsListening(false);\n    }\n  }, []);\n\n  const startisListening = useCallback(() => {\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then(stream => {\n        const speechEvents = hark(stream, {});\n\n        speechEvents.on('speaking', () => {\n          console.log('speaking');\n        });\n\n        let silenceTimer = null;\n        speechEvents.on('stopped_speaking', () => {\n          if (silenceTimer) clearTimeout(silenceTimer);\n          silenceTimer = setTimeout(() => {\n            console.log('Silence for 3 seconds, stopping recording');\n            stopisListening();\n            speechEvents.stop();\n          }, 3000);\n        });\n\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        audioChunksRef.current = [];\n\n        mediaRecorderRef.current.addEventListener(\"dataavailable\", (event) => {\n          audioChunksRef.current.push(event.data);\n        });\n\n        mediaRecorderRef.current.addEventListener(\"stop\", async () => {\n          if (audioChunksRef.current && audioChunksRef.current.length > 0) {\n            const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\n            const formData = new FormData();\n            formData.append(\"audio\", audioBlob);\n            formData.append(\"language\", language);\n\n            try {\n              const response = await fetch('https://34.93.4.171:9070/speech_to_text', {\n                method: 'POST',\n                body: formData,\n              });\n              const data = await response.json();\n              if (data.transcribedText && data.translatedText) {\n                setUserInput(data.transcribedText);\n                setTranslatedInput(data.translatedText.replace(/[.|]\\s*/g, ''));\n                setLastInputMethod('speech'); \n              } else {\n                console.error('No transcription available:', data);\n              }\n            } catch (error) {\n              console.error('Error:', error);\n            }\n          } else {\n            console.log('No audio data available to send.');\n          }\n        });\n\n        mediaRecorderRef.current.start();\n        setIsListening(true);\n      })\n      .catch(error => console.log('Error accessing the microphone:', error));\n  }, [language, stopisListening]);\n\n  const toggleListening = useCallback(() => {\n    if (!isListening) {\n      startisListening();\n    } else {\n      stopisListening();\n    }\n    inputRef.current.focus();\n  }, [isListening, startisListening, stopisListening]);\n\n  const startChat = () => {\n    setCollectingUserInfo(true);\n    setUserInfoStep('name');\n    handleBotMessage(\"Type your name\");\n    setChatStarted(true);\n  };\n\n  const stateMappings = useMemo(() => ({\n    symptom: 'symptom_questions',\n    lifestyle: 'lifestyle_questions',\n    genetic: 'genetic_questions',\n    report: 'report_questions',\n  }), []);\n\n  const userStateMappings = {\n    symptom: 'user_symptoms',\n    lifestyle: 'user_lifestyle',\n    genetic: 'user_genetic',\n    report: 'user_report',\n  };\n\n  const [apiStates, setApiStates] = useState({\n    greeting_response: \"\", \n    symptom_questions: [],\n    lifestyle_questions: [],\n    genetic_questions: [],\n    report_questions: [],\n    user_symptoms: [],\n    user_lifestyle: [],\n    user_genetic: [],\n    user_report: [],\n  });\n\n  const fetchContext = async (userResponses) => {\n    try {\n      setIsLoading(false);\n      setInputDisabled(true);\n      setIsListening(false); \n      const response = await fetch('https://34.93.4.171:9070/process_responses', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user_responses: userResponses }),\n      });\n      const data = await response.json();\n      return data.response;\n    } catch (error) {\n      return \"ERROR\";\n    }\n  };\n\n  const fetchClinicSuggestions = async (userAddress) => {\n    try {\n      const response = await fetch('https://34.93.4.171:9070/nearest_clinic', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ address: userAddress }),\n      });\n      const data = await response.json();\n      return data.nearest_clinic.join(\",\\n\");\n    } catch (error) {\n      return \"Error fetching clinic suggestions\";\n    }\n  };\n\n  const handleApiCall = useCallback(async (tag) => {\n    if (waitingForReportUploadResponse) return;\n    setIsLoading(true);\n    let context = '';\n    if (tag === 'report') {\n      const userResponses = {\n        lifestyle: apiStates.user_lifestyle.join(\", \"),\n        symptom: apiStates.user_symptoms.join(\", \"),\n        genetic: apiStates.user_genetic.join(\", \")\n      };\n      setInputDisabled(false);\n      context = await fetchContext(userResponses);\n      let prompt = await generatePromptForTag(userName, tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings, context);\n      try {\n        const response = await fetch('https://34.93.4.171:9070/predict', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ question: prompt, tag: tag, context: context}),\n        });\n        const data = await response.json();\n        await handleBotMessage(data.response);\n        setTimeout(async () => {\n          const clinicSuggestions = await fetchClinicSuggestions(userAddress);\n          await handleBotMessage(`You can visit any of the following clinics:\\n ${clinicSuggestions}`);\n          setShowFeedbackOptions(true);\n        }, 2000);\n      } catch (error) {\n        await handleBotMessage('There was an error processing your request.');\n      }\n    }\n    else{\n      let prompt = await generatePromptForTag(userName,tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings, context);\n      try {\n        const response = await fetch('https://34.93.4.171:9070/predict', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ question: prompt, tag: tag, context: context}),\n        });\n        const data = await response.json();\n        await handleBotMessage(data.response);\n        setApiStates((prevStates) => ({\n          ...prevStates,\n          [stateMappings[tag]]: [...prevStates[stateMappings[tag]], data.response],\n        }));\n      } catch (error) {\n        await handleBotMessage('There was an error processing your request.');\n      }\n    }\n    setIsLoading(false);\n    // eslint-disable-next-line\n  }, [userName, userAddress, currentTagIndex, shuffledTags, apiStates, waitingForReportUploadResponse, fetchContext, fetchClinicSuggestions, handleBotMessage]);\n\n  useEffect(() => {\n    setInputDisabled(isLoading || waitingForReportUploadResponse || showUploadModal || reportUploadAsked);\n  }, [isLoading, waitingForReportUploadResponse, showUploadModal, reportUploadAsked]);\n  \n\n  const handleInputChange = useCallback((event) => {\n    setUserInput(event.target.value);\n    setTranslatedInput('');\n    setLastInputMethod('typing');\n  }, []);\n\n  const askForReportUpload = useCallback(() => {\n    handleBotMessage(\"Would you like to upload a report? Please click Yes or No.\");\n    setReportUploadAsked(true);\n    setWaitingForReportUploadResponse(true);\n    setInputDisabled(true);\n  }, [handleBotMessage]);\n  \n  useEffect(() => {\n    if (!waitingForReportUploadResponse && shouldCallApiForReport) {\n      handleApiCall('report');\n      setShouldCallApiForReport(false);\n    }\n  }, [waitingForReportUploadResponse, shouldCallApiForReport, handleApiCall]);\n  \n  const handleReportUploadResponse = useCallback((response) => {\n    setReportUploadAsked(false);\n    setInputDisabled(false);\n    setWaitingForReportUploadResponse(false);\n  \n    if (response === 'Yes') {\n      setShowUploadModal(true);\n    } else {\n      setChatMessages((prevMessages) => [...prevMessages, { type: 'user', text: response }]);\n      setShouldCallApiForReport(true);\n    }\n  }, []);\n\nconst handleFileUpload = useCallback(async (file) => {\n  setShowUploadModal(false);\n  setInputDisabled(false);\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n      setChatMessages((prevMessages) => [...prevMessages, { type: 'user', text: `Uploaded Report: ${file.name}` }]);\n      const uploadResponse = await fetch('https://34.93.4.171:9070/pdf_summarizer', {\n          method: 'POST',\n          body: formData,\n      });\n      const uploadData = await uploadResponse.json();\n      if (uploadData && typeof uploadData.response === 'string') {\n        await handleBotMessage(uploadData.response);\n        handleApiCall('report');\n\n    } else {\n        await handleBotMessage(\"Received data from report analysis is not in expected format or is missing.\");\n        handleApiCall('report');\n    }\n  } catch (error) {\n      console.error('Failed to upload report:', error);\n      await handleBotMessage(\"There was an error in report analysis.\");\n      handleApiCall('report');\n  }\n      // eslint-disable-next-line\n}, [handleApiCall, fetchClinicSuggestions, userAddress]);\n\n\nconst UploadModal = () => (\n  <div className=\"upload-modal\">\n      <input type=\"file\" accept=\"application/pdf,application/json\" onChange={(e) => handleFileUpload(e.target.files[0])} />\n      <button onClick={() => {\n          setShowUploadModal(false);\n          setWaitingForReportUploadResponse(true);\n          setReportUploadAsked(true);\n          setInputDisabled(true);\n      }}>Cancel</button>\n  </div>\n);\n\n  const handleSendMessage = useCallback(async () => {\n    if (waitingForReportUploadResponse || isLoading || !userInput.trim()) return;\n    setInputDisabled(true);\n    const inputForBackend = lastInputMethod === 'speech' ? translatedInput : userInput;\n    const newUserMessage = { type: 'user', text: userInput };\n    setChatMessages(chatMessages => [...chatMessages, newUserMessage]);\n    setUserInput('');\n    if (collectingUserInfo) {\n      if (userInfoStep === 'name') {\n        setUserName(inputForBackend);\n        setUserInfoStep('age');\n        await handleBotMessage(\"Type your age\");\n        setUserInput(''); \n      } else if (userInfoStep === 'age') {\n        setUserAge(inputForBackend);\n        setUserInfoStep('gender');\n        await handleBotMessage(\"Type your gender\");\n        setUserInput(''); \n      } else if (userInfoStep === 'gender') {\n        setUserGender(inputForBackend);\n        setUserInfoStep('address');\n        await handleBotMessage(\"Type your address\");\n        setUserInput(''); \n      } else if (userInfoStep === 'address') {\n        setUserAddress(inputForBackend);\n        setCollectingUserInfo(false);\n        const shuffled = shuffleArray([...initialTags]);\n        shuffled.push('report');\n        setShuffledTags(shuffled);\n        await handleBotMessage(`Hi ${userName}, I am your doctor. How can I help you today?`);\n        setChatStarted(true);\n        setUserInput('');\n      }\n    } else {\n        if (currentTagIndex === -1) {\n            setApiStates(prevStates => ({\n              ...prevStates,\n              greeting_response: inputForBackend,\n            }));\n            setCurrentTagIndex(0);\n          } else {\n            const currentTag = shuffledTags[currentTagIndex];\n            const userStateKey = userStateMappings[currentTag];\n            setApiStates(prevStates => ({\n              ...prevStates,\n              [userStateKey]: [...prevStates[userStateKey], inputForBackend],\n            }));\n        \n            const nextIndex = currentTagIndex + 1;\n            if (nextIndex < shuffledTags.length) {\n              setCurrentTagIndex(nextIndex);\n              if (shuffledTags[nextIndex] === 'report') {\n                  askForReportUpload();\n                  return;\n              }\n            }\n          }    \n        }\n\n    setUserInput('');\n    setTranslatedInput(''); \n    setInputDisabled(false);\n    inputRef.current.focus();\n    // eslint-disable-next-line\n  }, [translatedInput, userInput, isLoading, chatMessages, collectingUserInfo, userInfoStep, userName, currentTagIndex, shuffledTags]);\n\n  useEffect(() => {\n    if (inputRef.current && !inputDisabled) {\n        inputRef.current.focus();\n    }\n}, [chatMessages, inputDisabled]);\n\nconst handleLanguageChange = useCallback((event) => {\n    setLanguage(event.target.value);\n    if (isListening) {\n      stopisListening();\n    }\n    setUserInput('');\n  }, [isListening, stopisListening]);\n\n  const handleFeedbackResponse = async (response) => {\n    await handleBotMessage(response);\n    setShowFeedbackOptions(false);\n    await handleBotMessage(\"Thank you for your feedback!\");\n    setFinalBotMessageShown(true);\n  };\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      setInputDisabled(true); \n    } else {\n      setInputDisabled(false); \n    }\n  }, [isLoading]);\n\n  const resetChat = useCallback(() => {\n    setChatStarted(false);\n    setChatMessages([]);\n    setCurrentTagIndex(-1);\n    setUserInput('');\n    setTranslatedInput('');\n    setLastInputMethod('typing');\n    setShuffledTags([]);\n    setIsListening(false);\n    setIsLoading(false);\n    setInputDisabled(false);\n    setCollectingUserInfo(false);\n    setUserInfoStep('');\n    setUserName('');\n    setUserAge('');\n    setUserGender('');\n    setUserAddress('');\n    setApiStates({\n        greeting_response: \"\", \n        symptom_questions: [],\n        lifestyle_questions: [],\n        genetic_questions: [],\n        report_questions: [],\n        user_symptoms: [],\n        user_lifestyle: [],\n        user_genetic: [],\n        user_report: [],\n    });\n}, []);\n\n  \n  useEffect(() => {\n    if (chatAreaRef.current) {\n      chatAreaRef.current.scrollTop = chatAreaRef.current.scrollHeight;\n    }\n  }, [chatMessages, reportUploadAsked]);\n  \n\n    return (\n        <div className=\"main-content\">\n          <select className=\"language-select\" value={language} onChange={handleLanguageChange}>\n                <option value=\"en-US\">English</option>\n                <option value=\"es-ES\">Spanish</option>\n                <option value=\"or-IN\">Odia</option>\n                <option value=\"hi-IN\">Hindi</option>\n              </select>\n            {!chatStarted && (\n            <button className=\"start-chat-button\" onClick={startChat}>\n            <FaPlay className=\"start-icon\" /> Start Chat\n            </button>\n            )}\n            {(chatStarted || collectingUserInfo) && (\n            <>\n            <div className={`chat-area ${reportUploadAsked ? 'disabled' : ''}`} ref={chatAreaRef}>\n              {chatMessages.map((msg, index) => (\n                <div key={index} className={`chat-message ${msg.type}-message`}>\n                  {msg.type === 'user' ? <FaUser className=\"message-icon user-icon\" /> : <FaRobot className=\"message-icon bot-icon\" />}\n                  <div className=\"chat-message-text\">\n                    {msg.text && msg.text.split('\\n').map((line, lineIndex, array) => (\n                      <React.Fragment key={lineIndex}>\n                        {line !== '.' ? line : null}\n                        {lineIndex !== array.length - 1 && line !== '.' && <br />}\n                      </React.Fragment>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              {reportUploadAsked && (\n                <div className=\"feedback-options\">\n                    <button onClick={() => handleReportUploadResponse('Yes')}>Yes</button>\n                    <button onClick={() => handleReportUploadResponse('No')}>No</button>\n                </div>\n            )}\n            {showUploadModal && <UploadModal />}\n              {showFeedbackOptions && (\n                <div className=\"chat-message bot-message\">\n                  <FaRobot className=\"message-icon bot-icon\" />\n                  <div>Was this chat helpful?</div>\n                </div>\n              )}\n              {showFeedbackOptions && (\n                <div className=\"feedback-options\">\n                  <button onClick={() => handleFeedbackResponse('Yes')}>Yes</button>\n                  <button onClick={() => handleFeedbackResponse('No')}>No</button>\n                </div>\n              )}\n            </div>\n            <div className={`input-area ${inputDisabled || reportUploadAsked || showUploadModal || showFeedbackOptions ? 'disabled' : ''}`}>\n                <FaMicrophone className={`mic-icon ${isListening ? 'listening' : ''} ${inputDisabled ? 'disabled' : ''}`} onClick={toggleListening} />\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  placeholder=\"Type your response...\"\n                  className={`prompt-input ${inputDisabled ? 'disabled' : ''}`}\n                  value={userInput}\n                  onChange={handleInputChange}\n                  onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                  disabled={inputDisabled}\n                />\n                <button\n                  className={`send-button ${isLoading || inputDisabled ? 'disabled' : ''}`}\n                  onClick={handleSendMessage}\n                  disabled={isLoading || inputDisabled}\n                >\n                  {isLoading ? <FaHourglassHalf className=\"hourglass\" /> : <FaPaperPlane />}\n                </button>\n            </div>\n            </>\n            )}\n            {chatStarted && (\n                <button className=\"reset-chat-button\" onClick={resetChat}>\n                Reset Chat\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default MainContent;\n\n function generatePromptForTag(userName,tag, currentTagIndex, shuffledTags, apiStates, stateMappings, userStateMappings,fetchedContext) {\n  let prompt = \"\";\n  const greetingQuestion =  `Hi ${userName}, I am your doctor. How can I help you today?`;\n  const greetingResponse = apiStates.greeting_response;\n\n  if (currentTagIndex === 0) {\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              I am playing a doctor in a play. Please generate one question I should ask a patient about their ${tag}.\n              Format your response strictly as follows: \n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === 1) {\n    const previousTag = shuffledTags[currentTagIndex - 1];\n    const lastQuestion = apiStates[stateMappings[previousTag]].slice(-1)[0];\n    const lastResponse = apiStates[userStateMappings[previousTag]].slice(-1)[0];\n\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              Previous Question: ${lastQuestion}\n              Previous Response from Patient: ${lastResponse}\n              I am playing a doctor in a play. Please generate one question based on the previous responses I should ask a patient about their ${tag}.\n              Format your response strictly as follows:\n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === 2) {\n    const previousTags = shuffledTags.slice(0, 2);\n    const previousQuestions = previousTags.map(tag => apiStates[stateMappings[tag]].slice(-1)[0]);\n    const previousResponses = previousTags.map(tag => apiStates[userStateMappings[tag]].slice(-1)[0]);\n\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              First Question: ${previousQuestions[0]}\n              First Response from Patient: ${previousResponses[0]}\n              Second Question: ${previousQuestions[1]}\n              Second Response from Patient: ${previousResponses[1]}\n              I am playing a doctor in a play. Please generate one question that I should ask a patient based on the previous responses, about their ${tag}.\n              Format your response strictly as follows:\n              ${tag.charAt(0).toUpperCase() + tag.slice(1)}: [A question related to the ${tag} they are having].`;\n  } else if (currentTagIndex === shuffledTags.length - 1) {\n    prompt = `Greeting Question: ${greetingQuestion}\n              Greeting Response from Patient: ${greetingResponse}\n              Patient symptoms: ${apiStates.user_symptoms.join(\", \")}.\n              Lifestyle and eating habits: ${apiStates.user_lifestyle.join(\", \")}.\n              Family history of diseases: ${apiStates.user_genetic.join(\", \")}.\n\n              Data Source for analysis:\n              ${fetchedContext}\n\n              Based on the patient's symptoms and provided context, provide a possible diagnosis, recommended treatments, and specialists to consult. \n              NOTE: 1. This will not be considered as a real treatment, don't give any note or precaution with your response.\n                    2. Make your diagnosis strictly based of of Data Source for analysis provided. \n              Format your response strictly as follows:\n              Diagnosis: [Specific diagnosis based on the symptoms].\n              Treatments:\n              - [Treatment 1]\n              - [Treatment 2]\n              - [Treatment 3]\n              ...\n              Specialists:\n              - [Specialist 1]\n              - [Specialist 2]\n              - [Specialist 3]\n              ...\n              END OF RESPONSE`;\n  }\n  return prompt;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAChF,SAASC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,YAAY,EAAEC,eAAe,QAAQ,gBAAgB;AACrG,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAMkC,gBAAgB,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM+B,cAAc,GAAG/B,MAAM,CAAC,EAAE,CAAC;EACjC,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAMwC,QAAQ,GAAGpC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACqC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMuD,WAAW,GAAGnD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACoD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC0D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAAC4D,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC8D,eAAe,EAAEC,kBAAkB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgE,8BAA8B,EAAEC,iCAAiC,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EAC3F,MAAM,CAACkE,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAE3E,MAAMoE,WAAW,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC;EAEvD,MAAMC,oBAAoB,GAAIC,YAAY,IAAK;IAC7C,MAAMC,WAAW,GAAG;MAClB,OAAO,EAAE,IAAI;MACb,OAAO,EAAE,IAAI;MACb,OAAO,EAAE,IAAI;MACb,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,WAAW,CAACD,YAAY,CAAC,IAAIA,YAAY,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC;EAEDvE,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,IAAI,CAACiC,kBAAkB,IAAI7B,eAAe,IAAI,CAAC,IAAII,YAAY,CAAC+C,MAAM,GAAGnD,eAAe,EAAE;MACrGoD,aAAa,CAAChD,YAAY,CAACJ,eAAe,CAAC,CAAC;IAChD;IACA;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEiC,kBAAkB,EAAEzB,YAAY,EAAEJ,eAAe,CAAC,CAAC;EAEpE,MAAMqD,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEN,YAAY,KAAK;IAClD,IAAI,CAACM,IAAI,IAAI,CAACN,YAAY,EAAE;MAC1BO,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAE;QAAEF,IAAI;QAAEN;MAAa,CAAC,CAAC;MAClF,OAAOM,IAAI;IACb;IACA,MAAMG,kBAAkB,GAAGV,oBAAoB,CAACC,YAAY,CAAC;IAC7D,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,IAAI,EAAEA,IAAI;UAAEW,eAAe,EAAER;QAAmB,CAAC;MAC1E,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACV,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEU,IAAI,CAACV,KAAK,CAAC;QACnD,OAAOF,IAAI;MACb;MACA,OAAOY,IAAI,CAACE,cAAc;IAC5B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAOF,IAAI;IACb;EACF,CAAC;;EAEG;EACJ,MAAMe,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C7D,YAAY,CAAC,IAAI,CAAC;IAClB,MAAM8D,iBAAiB,GAAG,MAAMlB,aAAa,CAACiB,OAAO,EAAE5D,QAAQ,CAAC;IAChE,MAAM8D,WAAW,GAAG,OAAOD,iBAAiB,KAAK,QAAQ,GAAGA,iBAAiB,GAAG,wBAAwB;IACxGxE,eAAe,CAAE0E,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEpB,IAAI,EAAEkB;IAAY,CAAC,CAAC,CAAC;IACxF/D,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAGC,MAAMkE,eAAe,GAAG/F,WAAW,CAAC,MAAM;IACxC,IAAIgC,gBAAgB,CAACgE,OAAO,EAAE;MAC5BhE,gBAAgB,CAACgE,OAAO,CAACC,IAAI,CAAC,CAAC;MAC/BtE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuE,gBAAgB,GAAGlG,WAAW,CAAC,MAAM;IACzCmG,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CACjDC,IAAI,CAACC,MAAM,IAAI;MACd,MAAMC,YAAY,GAAGhG,IAAI,CAAC+F,MAAM,EAAE,CAAC,CAAC,CAAC;MAErCC,YAAY,CAACC,EAAE,CAAC,UAAU,EAAE,MAAM;QAChC/B,OAAO,CAACgC,GAAG,CAAC,UAAU,CAAC;MACzB,CAAC,CAAC;MAEF,IAAIC,YAAY,GAAG,IAAI;MACvBH,YAAY,CAACC,EAAE,CAAC,kBAAkB,EAAE,MAAM;QACxC,IAAIE,YAAY,EAAEC,YAAY,CAACD,YAAY,CAAC;QAC5CA,YAAY,GAAGE,UAAU,CAAC,MAAM;UAC9BnC,OAAO,CAACgC,GAAG,CAAC,2CAA2C,CAAC;UACxDZ,eAAe,CAAC,CAAC;UACjBU,YAAY,CAACR,IAAI,CAAC,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;MAEFjE,gBAAgB,CAACgE,OAAO,GAAG,IAAIe,aAAa,CAACP,MAAM,CAAC;MACpDvE,cAAc,CAAC+D,OAAO,GAAG,EAAE;MAE3BhE,gBAAgB,CAACgE,OAAO,CAACgB,gBAAgB,CAAC,eAAe,EAAGC,KAAK,IAAK;QACpEhF,cAAc,CAAC+D,OAAO,CAACkB,IAAI,CAACD,KAAK,CAAC3B,IAAI,CAAC;MACzC,CAAC,CAAC;MAEFtD,gBAAgB,CAACgE,OAAO,CAACgB,gBAAgB,CAAC,MAAM,EAAE,YAAY;QAC5D,IAAI/E,cAAc,CAAC+D,OAAO,IAAI/D,cAAc,CAAC+D,OAAO,CAACzB,MAAM,GAAG,CAAC,EAAE;UAC/D,MAAM4C,SAAS,GAAG,IAAIC,IAAI,CAACnF,cAAc,CAAC+D,OAAO,EAAE;YAAEF,IAAI,EAAE;UAAa,CAAC,CAAC;UAC1E,MAAMuB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;UAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC;UACnCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEzF,QAAQ,CAAC;UAErC,IAAI;YACF,MAAMgD,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;cACtEC,MAAM,EAAE,MAAM;cACdE,IAAI,EAAEmC;YACR,CAAC,CAAC;YACF,MAAM/B,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;YAClC,IAAID,IAAI,CAACkC,eAAe,IAAIlC,IAAI,CAACE,cAAc,EAAE;cAC/CjE,YAAY,CAAC+D,IAAI,CAACkC,eAAe,CAAC;cAClCrF,kBAAkB,CAACmD,IAAI,CAACE,cAAc,CAACiC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;cAC/DpF,kBAAkB,CAAC,QAAQ,CAAC;YAC9B,CAAC,MAAM;cACLsC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEU,IAAI,CAAC;YACpD;UACF,CAAC,CAAC,OAAOV,KAAK,EAAE;YACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAChC;QACF,CAAC,MAAM;UACLD,OAAO,CAACgC,GAAG,CAAC,kCAAkC,CAAC;QACjD;MACF,CAAC,CAAC;MAEF3E,gBAAgB,CAACgE,OAAO,CAAC0B,KAAK,CAAC,CAAC;MAChC/F,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,CACDgG,KAAK,CAAC/C,KAAK,IAAID,OAAO,CAACgC,GAAG,CAAC,iCAAiC,EAAE/B,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,CAAC9C,QAAQ,EAAEiE,eAAe,CAAC,CAAC;EAE/B,MAAM6B,eAAe,GAAG5H,WAAW,CAAC,MAAM;IACxC,IAAI,CAAC0B,WAAW,EAAE;MAChBwE,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACLH,eAAe,CAAC,CAAC;IACnB;IACAzD,QAAQ,CAAC0D,OAAO,CAAC6B,KAAK,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACnG,WAAW,EAAEwE,gBAAgB,EAAEH,eAAe,CAAC,CAAC;EAEpD,MAAM+B,SAAS,GAAGA,CAAA,KAAM;IACtB5E,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,eAAe,CAAC,MAAM,CAAC;IACvBqC,gBAAgB,CAAC,gBAAgB,CAAC;IAClCxE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM8G,aAAa,GAAG9H,OAAO,CAAC,OAAO;IACnC+H,OAAO,EAAE,mBAAmB;IAC5BC,SAAS,EAAE,qBAAqB;IAChCC,OAAO,EAAE,mBAAmB;IAC5BC,MAAM,EAAE;EACV,CAAC,CAAC,EAAE,EAAE,CAAC;EAEP,MAAMC,iBAAiB,GAAG;IACxBJ,OAAO,EAAE,eAAe;IACxBC,SAAS,EAAE,gBAAgB;IAC3BC,OAAO,EAAE,cAAc;IACvBC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGxI,QAAQ,CAAC;IACzCyI,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE,EAAE;IACrBC,mBAAmB,EAAE,EAAE;IACvBC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,EAAE;IACpBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,aAAa,IAAK;IAC5C,IAAI;MACFpH,YAAY,CAAC,KAAK,CAAC;MACnBW,gBAAgB,CAAC,IAAI,CAAC;MACtBb,cAAc,CAAC,KAAK,CAAC;MACrB,MAAMmD,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE8D,cAAc,EAAED;QAAc,CAAC;MACxD,CAAC,CAAC;MACF,MAAM3D,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAACR,QAAQ;IACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,OAAO,OAAO;IAChB;EACF,CAAC;EAED,MAAMuE,sBAAsB,GAAG,MAAOpG,WAAW,IAAK;IACpD,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEgE,OAAO,EAAErG;QAAY,CAAC;MAC/C,CAAC,CAAC;MACF,MAAMuC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAAC+D,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC;IACxC,CAAC,CAAC,OAAO1E,KAAK,EAAE;MACd,OAAO,mCAAmC;IAC5C;EACF,CAAC;EAED,MAAMJ,aAAa,GAAGxE,WAAW,CAAC,MAAOuJ,GAAG,IAAK;IAC/C,IAAIzF,8BAA8B,EAAE;IACpCjC,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI2H,OAAO,GAAG,EAAE;IAChB,IAAID,GAAG,KAAK,QAAQ,EAAE;MACpB,MAAMN,aAAa,GAAG;QACpBhB,SAAS,EAAEI,SAAS,CAACQ,cAAc,CAACS,IAAI,CAAC,IAAI,CAAC;QAC9CtB,OAAO,EAAEK,SAAS,CAACO,aAAa,CAACU,IAAI,CAAC,IAAI,CAAC;QAC3CpB,OAAO,EAAEG,SAAS,CAACS,YAAY,CAACQ,IAAI,CAAC,IAAI;MAC3C,CAAC;MACD9G,gBAAgB,CAAC,KAAK,CAAC;MACvBgH,OAAO,GAAG,MAAMR,YAAY,CAACC,aAAa,CAAC;MAC3C,IAAIQ,MAAM,GAAG,MAAMC,oBAAoB,CAACjH,QAAQ,EAAE8G,GAAG,EAAEnI,eAAe,EAAEI,YAAY,EAAE6G,SAAS,EAAEN,aAAa,EAAEK,iBAAiB,EAAEoB,OAAO,CAAC;MAC3I,IAAI;QACF,MAAM1E,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEuE,QAAQ,EAAEF,MAAM;YAAEF,GAAG,EAAEA,GAAG;YAAEC,OAAO,EAAEA;UAAO,CAAC;QACtE,CAAC,CAAC;QACF,MAAMlE,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,MAAME,gBAAgB,CAACH,IAAI,CAACR,QAAQ,CAAC;QACrCgC,UAAU,CAAC,YAAY;UACrB,MAAM8C,iBAAiB,GAAG,MAAMT,sBAAsB,CAACpG,WAAW,CAAC;UACnE,MAAM0C,gBAAgB,CAAE,iDAAgDmE,iBAAkB,EAAC,CAAC;UAC5FrG,sBAAsB,CAAC,IAAI,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACd,MAAMa,gBAAgB,CAAC,6CAA6C,CAAC;MACvE;IACF,CAAC,MACG;MACF,IAAIgE,MAAM,GAAG,MAAMC,oBAAoB,CAACjH,QAAQ,EAAC8G,GAAG,EAAEnI,eAAe,EAAEI,YAAY,EAAE6G,SAAS,EAAEN,aAAa,EAAEK,iBAAiB,EAAEoB,OAAO,CAAC;MAC1I,IAAI;QACF,MAAM1E,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEuE,QAAQ,EAAEF,MAAM;YAAEF,GAAG,EAAEA,GAAG;YAAEC,OAAO,EAAEA;UAAO,CAAC;QACtE,CAAC,CAAC;QACF,MAAMlE,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,MAAME,gBAAgB,CAACH,IAAI,CAACR,QAAQ,CAAC;QACrCwD,YAAY,CAAEuB,UAAU,KAAM;UAC5B,GAAGA,UAAU;UACb,CAAC9B,aAAa,CAACwB,GAAG,CAAC,GAAG,CAAC,GAAGM,UAAU,CAAC9B,aAAa,CAACwB,GAAG,CAAC,CAAC,EAAEjE,IAAI,CAACR,QAAQ;QACzE,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOF,KAAK,EAAE;QACd,MAAMa,gBAAgB,CAAC,6CAA6C,CAAC;MACvE;IACF;IACA5D,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACY,QAAQ,EAAEM,WAAW,EAAE3B,eAAe,EAAEI,YAAY,EAAE6G,SAAS,EAAEvE,8BAA8B,EAAEkF,YAAY,EAAEG,sBAAsB,EAAE1D,gBAAgB,CAAC,CAAC;EAE7J1F,SAAS,CAAC,MAAM;IACdyC,gBAAgB,CAACZ,SAAS,IAAIkC,8BAA8B,IAAIF,eAAe,IAAIF,iBAAiB,CAAC;EACvG,CAAC,EAAE,CAAC9B,SAAS,EAAEkC,8BAA8B,EAAEF,eAAe,EAAEF,iBAAiB,CAAC,CAAC;EAGnF,MAAMoG,iBAAiB,GAAG9J,WAAW,CAAEiH,KAAK,IAAK;IAC/C1F,YAAY,CAAC0F,KAAK,CAAC8C,MAAM,CAACC,KAAK,CAAC;IAChC7H,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,QAAQ,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM4H,kBAAkB,GAAGjK,WAAW,CAAC,MAAM;IAC3CyF,gBAAgB,CAAC,4DAA4D,CAAC;IAC9E9B,oBAAoB,CAAC,IAAI,CAAC;IAC1BI,iCAAiC,CAAC,IAAI,CAAC;IACvCvB,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC,EAAE,CAACiD,gBAAgB,CAAC,CAAC;EAEtB1F,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+D,8BAA8B,IAAIE,sBAAsB,EAAE;MAC7DQ,aAAa,CAAC,QAAQ,CAAC;MACvBP,yBAAyB,CAAC,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACH,8BAA8B,EAAEE,sBAAsB,EAAEQ,aAAa,CAAC,CAAC;EAE3E,MAAM0F,0BAA0B,GAAGlK,WAAW,CAAE8E,QAAQ,IAAK;IAC3DnB,oBAAoB,CAAC,KAAK,CAAC;IAC3BnB,gBAAgB,CAAC,KAAK,CAAC;IACvBuB,iCAAiC,CAAC,KAAK,CAAC;IAExC,IAAIe,QAAQ,KAAK,KAAK,EAAE;MACtBjB,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACL1C,eAAe,CAAE0E,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEpB,IAAI,EAAEI;MAAS,CAAC,CAAC,CAAC;MACtFb,yBAAyB,CAAC,IAAI,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAER,MAAMkG,gBAAgB,GAAGnK,WAAW,CAAC,MAAOoK,IAAI,IAAK;IACnDvG,kBAAkB,CAAC,KAAK,CAAC;IACzBrB,gBAAgB,CAAC,KAAK,CAAC;IACvB,MAAM6E,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE6C,IAAI,CAAC;IAE7B,IAAI;MACAjJ,eAAe,CAAE0E,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEpB,IAAI,EAAG,oBAAmB0F,IAAI,CAACC,IAAK;MAAE,CAAC,CAAC,CAAC;MAC7G,MAAMC,cAAc,GAAG,MAAMvF,KAAK,CAAC,yCAAyC,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEmC;MACV,CAAC,CAAC;MACF,MAAMkD,UAAU,GAAG,MAAMD,cAAc,CAAC/E,IAAI,CAAC,CAAC;MAC9C,IAAIgF,UAAU,IAAI,OAAOA,UAAU,CAACzF,QAAQ,KAAK,QAAQ,EAAE;QACzD,MAAMW,gBAAgB,CAAC8E,UAAU,CAACzF,QAAQ,CAAC;QAC3CN,aAAa,CAAC,QAAQ,CAAC;MAE3B,CAAC,MAAM;QACH,MAAMiB,gBAAgB,CAAC,6EAA6E,CAAC;QACrGjB,aAAa,CAAC,QAAQ,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMa,gBAAgB,CAAC,wCAAwC,CAAC;MAChEjB,aAAa,CAAC,QAAQ,CAAC;IAC3B;IACI;EACN,CAAC,EAAE,CAACA,aAAa,EAAE2E,sBAAsB,EAAEpG,WAAW,CAAC,CAAC;EAGxD,MAAMyH,WAAW,GAAGA,CAAA,kBAClB7J,OAAA;IAAK8J,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzB/J,OAAA;MAAOmF,IAAI,EAAC,MAAM;MAAC6E,MAAM,EAAC,kCAAkC;MAACC,QAAQ,EAAGC,CAAC,IAAKV,gBAAgB,CAACU,CAAC,CAACd,MAAM,CAACe,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrHvK,OAAA;MAAQwK,OAAO,EAAEA,CAAA,KAAM;QACnBtH,kBAAkB,CAAC,KAAK,CAAC;QACzBE,iCAAiC,CAAC,IAAI,CAAC;QACvCJ,oBAAoB,CAAC,IAAI,CAAC;QAC1BnB,gBAAgB,CAAC,IAAI,CAAC;MAC1B,CAAE;MAAAkI,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CACN;EAEC,MAAME,iBAAiB,GAAGpL,WAAW,CAAC,YAAY;IAChD,IAAI8D,8BAA8B,IAAIlC,SAAS,IAAI,CAACN,SAAS,CAAC+J,IAAI,CAAC,CAAC,EAAE;IACtE7I,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAM8I,eAAe,GAAGlJ,eAAe,KAAK,QAAQ,GAAGF,eAAe,GAAGZ,SAAS;IAClF,MAAMiK,cAAc,GAAG;MAAEzF,IAAI,EAAE,MAAM;MAAEpB,IAAI,EAAEpD;IAAU,CAAC;IACxDH,eAAe,CAACD,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEqK,cAAc,CAAC,CAAC;IAClEhK,YAAY,CAAC,EAAE,CAAC;IAChB,IAAI0B,kBAAkB,EAAE;MACtB,IAAIE,YAAY,KAAK,MAAM,EAAE;QAC3BT,WAAW,CAAC4I,eAAe,CAAC;QAC5BlI,eAAe,CAAC,KAAK,CAAC;QACtB,MAAMqC,gBAAgB,CAAC,eAAe,CAAC;QACvClE,YAAY,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM,IAAI4B,YAAY,KAAK,KAAK,EAAE;QACjCP,UAAU,CAAC0I,eAAe,CAAC;QAC3BlI,eAAe,CAAC,QAAQ,CAAC;QACzB,MAAMqC,gBAAgB,CAAC,kBAAkB,CAAC;QAC1ClE,YAAY,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM,IAAI4B,YAAY,KAAK,QAAQ,EAAE;QACpCL,aAAa,CAACwI,eAAe,CAAC;QAC9BlI,eAAe,CAAC,SAAS,CAAC;QAC1B,MAAMqC,gBAAgB,CAAC,mBAAmB,CAAC;QAC3ClE,YAAY,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM,IAAI4B,YAAY,KAAK,SAAS,EAAE;QACrCH,cAAc,CAACsI,eAAe,CAAC;QAC/BpI,qBAAqB,CAAC,KAAK,CAAC;QAC5B,MAAMsI,QAAQ,GAAGC,YAAY,CAAC,CAAC,GAAGvH,WAAW,CAAC,CAAC;QAC/CsH,QAAQ,CAACtE,IAAI,CAAC,QAAQ,CAAC;QACvBzF,eAAe,CAAC+J,QAAQ,CAAC;QACzB,MAAM/F,gBAAgB,CAAE,MAAKhD,QAAS,+CAA8C,CAAC;QACrFxB,cAAc,CAAC,IAAI,CAAC;QACpBM,YAAY,CAAC,EAAE,CAAC;MAClB;IACF,CAAC,MAAM;MACH,IAAIH,eAAe,KAAK,CAAC,CAAC,EAAE;QACxBkH,YAAY,CAACuB,UAAU,KAAK;UAC1B,GAAGA,UAAU;UACbtB,iBAAiB,EAAE+C;QACrB,CAAC,CAAC,CAAC;QACHjK,kBAAkB,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACL,MAAMqK,UAAU,GAAGlK,YAAY,CAACJ,eAAe,CAAC;QAChD,MAAMuK,YAAY,GAAGvD,iBAAiB,CAACsD,UAAU,CAAC;QAClDpD,YAAY,CAACuB,UAAU,KAAK;UAC1B,GAAGA,UAAU;UACb,CAAC8B,YAAY,GAAG,CAAC,GAAG9B,UAAU,CAAC8B,YAAY,CAAC,EAAEL,eAAe;QAC/D,CAAC,CAAC,CAAC;QAEH,MAAMM,SAAS,GAAGxK,eAAe,GAAG,CAAC;QACrC,IAAIwK,SAAS,GAAGpK,YAAY,CAAC+C,MAAM,EAAE;UACnClD,kBAAkB,CAACuK,SAAS,CAAC;UAC7B,IAAIpK,YAAY,CAACoK,SAAS,CAAC,KAAK,QAAQ,EAAE;YACtC3B,kBAAkB,CAAC,CAAC;YACpB;UACJ;QACF;MACF;IACF;IAEJ1I,YAAY,CAAC,EAAE,CAAC;IAChBY,kBAAkB,CAAC,EAAE,CAAC;IACtBK,gBAAgB,CAAC,KAAK,CAAC;IACvBF,QAAQ,CAAC0D,OAAO,CAAC6B,KAAK,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAAC3F,eAAe,EAAEZ,SAAS,EAAEM,SAAS,EAAEV,YAAY,EAAE+B,kBAAkB,EAAEE,YAAY,EAAEV,QAAQ,EAAErB,eAAe,EAAEI,YAAY,CAAC,CAAC;EAEpIzB,SAAS,CAAC,MAAM;IACd,IAAIuC,QAAQ,CAAC0D,OAAO,IAAI,CAACzD,aAAa,EAAE;MACpCD,QAAQ,CAAC0D,OAAO,CAAC6B,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAAC3G,YAAY,EAAEqB,aAAa,CAAC,CAAC;EAEjC,MAAMsJ,oBAAoB,GAAG7L,WAAW,CAAEiH,KAAK,IAAK;IAChDlF,WAAW,CAACkF,KAAK,CAAC8C,MAAM,CAACC,KAAK,CAAC;IAC/B,IAAItI,WAAW,EAAE;MACfqE,eAAe,CAAC,CAAC;IACnB;IACAxE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACG,WAAW,EAAEqE,eAAe,CAAC,CAAC;EAElC,MAAM+F,sBAAsB,GAAG,MAAOhH,QAAQ,IAAK;IACjD,MAAMW,gBAAgB,CAACX,QAAQ,CAAC;IAChCvB,sBAAsB,CAAC,KAAK,CAAC;IAC7B,MAAMkC,gBAAgB,CAAC,8BAA8B,CAAC;IACtDhC,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMgI,YAAY,GAAIM,KAAK,IAAK;IAC9B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACxH,MAAM,GAAG,CAAC,EAAEyH,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACE,CAAC,CAAC,CAAC,GAAG,CAACF,KAAK,CAACE,CAAC,CAAC,EAAEF,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd,CAAC;EAEDhM,SAAS,CAAC,MAAM;IACd,IAAI6B,SAAS,EAAE;MACbY,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACLA,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,MAAMyK,SAAS,GAAGrM,WAAW,CAAC,MAAM;IAClCiB,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IACnBE,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACtBE,YAAY,CAAC,EAAE,CAAC;IAChBY,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,QAAQ,CAAC;IAC5BZ,eAAe,CAAC,EAAE,CAAC;IACnBE,cAAc,CAAC,KAAK,CAAC;IACrBE,YAAY,CAAC,KAAK,CAAC;IACnBW,gBAAgB,CAAC,KAAK,CAAC;IACvBU,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,eAAe,CAAC,EAAE,CAAC;IACnBV,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;IAClBsF,YAAY,CAAC;MACTC,iBAAiB,EAAE,EAAE;MACrBC,iBAAiB,EAAE,EAAE;MACrBC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,gBAAgB,EAAE,EAAE;MACpBC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGJhJ,SAAS,CAAC,MAAM;IACd,IAAIsD,WAAW,CAAC2C,OAAO,EAAE;MACvB3C,WAAW,CAAC2C,OAAO,CAACsG,SAAS,GAAGjJ,WAAW,CAAC2C,OAAO,CAACuG,YAAY;IAClE;EACF,CAAC,EAAE,CAACrL,YAAY,EAAEwC,iBAAiB,CAAC,CAAC;EAGnC,oBACI/C,OAAA;IAAK8J,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B/J,OAAA;MAAQ8J,SAAS,EAAC,iBAAiB;MAACT,KAAK,EAAElI,QAAS;MAAC8I,QAAQ,EAAEiB,oBAAqB;MAAAnB,QAAA,gBAC9E/J,OAAA;QAAQqJ,KAAK,EAAC,OAAO;QAAAU,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCvK,OAAA;QAAQqJ,KAAK,EAAC,OAAO;QAAAU,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCvK,OAAA;QAAQqJ,KAAK,EAAC,OAAO;QAAAU,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCvK,OAAA;QAAQqJ,KAAK,EAAC,OAAO;QAAAU,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACV,CAAClK,WAAW,iBACbL,OAAA;MAAQ8J,SAAS,EAAC,mBAAmB;MAACU,OAAO,EAAErD,SAAU;MAAA4C,QAAA,gBACzD/J,OAAA,CAACN,MAAM;QAACoK,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACP,EACA,CAAClK,WAAW,IAAIiC,kBAAkB,kBACnCtC,OAAA,CAAAE,SAAA;MAAA6J,QAAA,gBACA/J,OAAA;QAAK8J,SAAS,EAAG,aAAY/G,iBAAiB,GAAG,UAAU,GAAG,EAAG,EAAE;QAAC8I,GAAG,EAAEnJ,WAAY;QAAAqH,QAAA,GAClFxJ,YAAY,CAACuL,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BhM,OAAA;UAAiB8J,SAAS,EAAG,gBAAeiC,GAAG,CAAC5G,IAAK,UAAU;UAAA4E,QAAA,GAC5DgC,GAAG,CAAC5G,IAAI,KAAK,MAAM,gBAAGnF,OAAA,CAACP,MAAM;YAACqK,SAAS,EAAC;UAAwB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGvK,OAAA,CAACR,OAAO;YAACsK,SAAS,EAAC;UAAuB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpHvK,OAAA;YAAK8J,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/BgC,GAAG,CAAChI,IAAI,IAAIgI,GAAG,CAAChI,IAAI,CAACJ,KAAK,CAAC,IAAI,CAAC,CAACmI,GAAG,CAAC,CAACG,IAAI,EAAEC,SAAS,EAAEd,KAAK,kBAC3DpL,OAAA,CAACd,KAAK,CAACe,QAAQ;cAAA8J,QAAA,GACZkC,IAAI,KAAK,GAAG,GAAGA,IAAI,GAAG,IAAI,EAC1BC,SAAS,KAAKd,KAAK,CAACxH,MAAM,GAAG,CAAC,IAAIqI,IAAI,KAAK,GAAG,iBAAIjM,OAAA;gBAAAoK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAFtC2B,SAAS;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGd,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GATEyB,KAAK;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACN,CAAC,EACDxH,iBAAiB,iBAChB/C,OAAA;UAAK8J,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B/J,OAAA;YAAQwK,OAAO,EAAEA,CAAA,KAAMjB,0BAA0B,CAAC,KAAK,CAAE;YAAAQ,QAAA,EAAC;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtEvK,OAAA;YAAQwK,OAAO,EAAEA,CAAA,KAAMjB,0BAA0B,CAAC,IAAI,CAAE;YAAAQ,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CACR,EACAtH,eAAe,iBAAIjD,OAAA,CAAC6J,WAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAChC5H,mBAAmB,iBAClB3C,OAAA;UAAK8J,SAAS,EAAC,0BAA0B;UAAAC,QAAA,gBACvC/J,OAAA,CAACR,OAAO;YAACsK,SAAS,EAAC;UAAuB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7CvK,OAAA;YAAA+J,QAAA,EAAK;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACN,EACA5H,mBAAmB,iBAClB3C,OAAA;UAAK8J,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B/J,OAAA;YAAQwK,OAAO,EAAEA,CAAA,KAAMW,sBAAsB,CAAC,KAAK,CAAE;YAAApB,QAAA,EAAC;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClEvK,OAAA;YAAQwK,OAAO,EAAEA,CAAA,KAAMW,sBAAsB,CAAC,IAAI,CAAE;YAAApB,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNvK,OAAA;QAAK8J,SAAS,EAAG,cAAalI,aAAa,IAAImB,iBAAiB,IAAIE,eAAe,IAAIN,mBAAmB,GAAG,UAAU,GAAG,EAAG,EAAE;QAAAoH,QAAA,gBAC3H/J,OAAA,CAACL,YAAY;UAACmK,SAAS,EAAG,YAAW/I,WAAW,GAAG,WAAW,GAAG,EAAG,IAAGa,aAAa,GAAG,UAAU,GAAG,EAAG,EAAE;UAAC4I,OAAO,EAAEvD;QAAgB;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtIvK,OAAA;UACE6L,GAAG,EAAElK,QAAS;UACdwD,IAAI,EAAC,MAAM;UACXgH,WAAW,EAAC,uBAAuB;UACnCrC,SAAS,EAAG,gBAAelI,aAAa,GAAG,UAAU,GAAG,EAAG,EAAE;UAC7DyH,KAAK,EAAE1I,SAAU;UACjBsJ,QAAQ,EAAEd,iBAAkB;UAC5BiD,UAAU,EAAGlC,CAAC,IAAKA,CAAC,CAACmC,GAAG,KAAK,OAAO,IAAI5B,iBAAiB,CAAC,CAAE;UAC5D6B,QAAQ,EAAE1K;QAAc;UAAAwI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFvK,OAAA;UACE8J,SAAS,EAAG,eAAc7I,SAAS,IAAIW,aAAa,GAAG,UAAU,GAAG,EAAG,EAAE;UACzE4I,OAAO,EAAEC,iBAAkB;UAC3B6B,QAAQ,EAAErL,SAAS,IAAIW,aAAc;UAAAmI,QAAA,EAEpC9I,SAAS,gBAAGjB,OAAA,CAACH,eAAe;YAACiK,SAAS,EAAC;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGvK,OAAA,CAACJ,YAAY;YAAAwK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,eACJ,CACD,EACAlK,WAAW,iBACRL,OAAA;MAAQ8J,SAAS,EAAC,mBAAmB;MAACU,OAAO,EAAEkB,SAAU;MAAA3B,QAAA,EAAC;IAE1D;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnK,EAAA,CA7jBID,WAAW;AAAAoM,EAAA,GAAXpM,WAAW;AA+jBjB,eAAeA,WAAW;AAEzB,SAAS4I,oBAAoBA,CAACjH,QAAQ,EAAC8G,GAAG,EAAEnI,eAAe,EAAEI,YAAY,EAAE6G,SAAS,EAAEN,aAAa,EAAEK,iBAAiB,EAAC+E,cAAc,EAAE;EACtI,IAAI1D,MAAM,GAAG,EAAE;EACf,MAAM2D,gBAAgB,GAAK,MAAK3K,QAAS,+CAA8C;EACvF,MAAM4K,gBAAgB,GAAGhF,SAAS,CAACE,iBAAiB;EAEpD,IAAInH,eAAe,KAAK,CAAC,EAAE;IACzBqI,MAAM,GAAI,sBAAqB2D,gBAAiB;AACpD,gDAAgDC,gBAAiB;AACjE,iHAAiH9D,GAAI;AACrH;AACA,gBAAgBA,GAAG,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGhE,GAAG,CAACiE,KAAK,CAAC,CAAC,CAAE,gCAA+BjE,GAAI,oBAAmB;EAC/G,CAAC,MAAM,IAAInI,eAAe,KAAK,CAAC,EAAE;IAChC,MAAMqM,WAAW,GAAGjM,YAAY,CAACJ,eAAe,GAAG,CAAC,CAAC;IACrD,MAAMsM,YAAY,GAAGrF,SAAS,CAACN,aAAa,CAAC0F,WAAW,CAAC,CAAC,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,MAAMG,YAAY,GAAGtF,SAAS,CAACD,iBAAiB,CAACqF,WAAW,CAAC,CAAC,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE3E/D,MAAM,GAAI,sBAAqB2D,gBAAiB;AACpD,gDAAgDC,gBAAiB;AACjE,mCAAmCK,YAAa;AAChD,gDAAgDC,YAAa;AAC7D,iJAAiJpE,GAAI;AACrJ;AACA,gBAAgBA,GAAG,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGhE,GAAG,CAACiE,KAAK,CAAC,CAAC,CAAE,gCAA+BjE,GAAI,oBAAmB;EAC/G,CAAC,MAAM,IAAInI,eAAe,KAAK,CAAC,EAAE;IAChC,MAAMwM,YAAY,GAAGpM,YAAY,CAACgM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7C,MAAMK,iBAAiB,GAAGD,YAAY,CAACnB,GAAG,CAAClD,GAAG,IAAIlB,SAAS,CAACN,aAAa,CAACwB,GAAG,CAAC,CAAC,CAACiE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,MAAMM,iBAAiB,GAAGF,YAAY,CAACnB,GAAG,CAAClD,GAAG,IAAIlB,SAAS,CAACD,iBAAiB,CAACmB,GAAG,CAAC,CAAC,CAACiE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjG/D,MAAM,GAAI,sBAAqB2D,gBAAiB;AACpD,gDAAgDC,gBAAiB;AACjE,gCAAgCQ,iBAAiB,CAAC,CAAC,CAAE;AACrD,6CAA6CC,iBAAiB,CAAC,CAAC,CAAE;AAClE,iCAAiCD,iBAAiB,CAAC,CAAC,CAAE;AACtD,8CAA8CC,iBAAiB,CAAC,CAAC,CAAE;AACnE,uJAAuJvE,GAAI;AAC3J;AACA,gBAAgBA,GAAG,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGhE,GAAG,CAACiE,KAAK,CAAC,CAAC,CAAE,gCAA+BjE,GAAI,oBAAmB;EAC/G,CAAC,MAAM,IAAInI,eAAe,KAAKI,YAAY,CAAC+C,MAAM,GAAG,CAAC,EAAE;IACtDkF,MAAM,GAAI,sBAAqB2D,gBAAiB;AACpD,gDAAgDC,gBAAiB;AACjE,kCAAkChF,SAAS,CAACO,aAAa,CAACU,IAAI,CAAC,IAAI,CAAE;AACrE,6CAA6CjB,SAAS,CAACQ,cAAc,CAACS,IAAI,CAAC,IAAI,CAAE;AACjF,4CAA4CjB,SAAS,CAACS,YAAY,CAACQ,IAAI,CAAC,IAAI,CAAE;AAC9E;AACA;AACA,gBAAgB6D,cAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;EAC5B;EACA,OAAO1D,MAAM;AACf;AAAC,IAAAyD,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}